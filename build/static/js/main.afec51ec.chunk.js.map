{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","shared/context/auth-context.js","contacts/components/ContactItem.js","contacts/components/ContactTable.js","shared/components/UIElements/ErrorCard.js","contacts/pages/PopulatedContacts.js","contacts/pages/ContactsPage.js","contacts/components/ContactForm.js","users/pages/Auth.js","shared/components/NavBar.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","console","log","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ContactItem","contact","setContact","auth","useContext","id","useRouteMatch","params","history","useHistory","fetchContact","process","Authorization","onDelete","window","confirm","deleteContact","style","display","justifyContent","minWidth","Card","sx","margin","CardContent","Typography","gutterBottom","variant","component","align","name","number","email","Link","to","pathname","state","onClick","ContactTable","items","length","rows","map","DataGrid","columns","field","headerName","flex","onRowClick","AutoGenerateColumns","ErrorCard","Container","width","marginTop","padding","textAlign","PopulatedContacts","query","loadedContacts","setloadedContacts","useParams","contacts","fetchContacts","ContactsPage","header","Grid","container","spacing","direction","alignItems","Box","ContactForm","location","useLocation","useForm","register","handleSubmit","formState","errors","setValue","touchedFields","onSubmit","data","updateContact","addNewContact","JSON","stringify","creator","alert","item","maxWidth","borderRadius","mt","mb","xs","flexGrow","TextField","fullWidth","label","required","helperText","pattern","value","type","color","marginRight","Auth","isLoginMode","setIsLoginMode","password","Search","styled","theme","position","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","up","SearchIconWrapper","height","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","NavBar","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","input","setInput","handleCloseNavMenu","handleCloseUserMenu","handleAllContacts","e","marginBottom","AppBar","boxShadow","Toolbar","disableGutters","md","mr","noWrap","fontFamily","fontWeight","letterSpacing","textDecoration","IconButton","size","aria-label","aria-controls","aria-haspopup","event","currentTarget","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","MenuItem","key","href","my","preventDefault","placeholder","inputProps","onChange","target","Tooltip","title","p","Avatar","alt","src","onClose","App","setToken","setUserId","loggingin","setLoggingin","storedData","parse","localStorage","getItem","routes","uid","setItem","removeItem","path","exact","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afec51ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useState, useCallback, useRef, useEffect } from 'react'\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState()\r\n\r\n  const activeHttpRequests = useRef([])\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setIsLoading(true)\r\n    const httpAbortCtrl = new AbortController()\r\n    activeHttpRequests.current.push(httpAbortCtrl)\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal,\r\n      })\r\n\r\n      const responseData = await response.json()\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter((reqCtrl) => reqCtrl !== httpAbortCtrl)\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message)\r\n      }\r\n\r\n      setIsLoading(false)\r\n      return responseData\r\n    } catch (err) {\r\n      console.log(err)\r\n      setError(err.message)\r\n      setIsLoading(false)\r\n      throw err\r\n    }\r\n  }, [])\r\n\r\n  const clearError = () => {\r\n    setError(null)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort())\r\n    }\r\n  }, [])\r\n\r\n  return { isLoading, error, sendRequest, clearError }\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n})\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useHistory, useRouteMatch, Link } from 'react-router-dom'\r\n\r\nimport { Card, CardHeader, CardContent, Button, Typography } from '@mui/material'\r\n\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\nimport './ContactItem.css'\r\n\r\nconst ContactItem = () => {\r\n  const [contact, setContact] = useState()\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n  const auth = useContext(AuthContext)\r\n\r\n  const id = useRouteMatch().params.id\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const fetchContact = async () => {\r\n      try {\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/contact/${id}`, 'GET', null, {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        })\r\n        setContact(responseData.contact)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    console.log('here?')\r\n    fetchContact()\r\n  }, [sendRequest, id])\r\n\r\n  const onDelete = async () => {\r\n    if (window.confirm('Delete contact?')) {\r\n      await deleteContact()\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const deleteContact = async () => {\r\n    try {\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + `/contact/${id}/delete`, 'DELETE', null, {\r\n        Authorization: 'Bearer ' + auth.token,\r\n      })\r\n    } catch (err) {}\r\n  }\r\n\r\n  console.log(contact)\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', minWidth: '40%' }}>\r\n      <Card sx={{ minWidth: '40%', margin: '5% 0%' }}>\r\n        <CardContent>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n          {!isLoading && contact && (\r\n            <>\r\n              <Typography gutterBottom variant='h2' component='div' align='center'>\r\n                {contact.name}\r\n              </Typography>\r\n              <Typography variant='body1' component='div' align='center'>\r\n                <p>Name: {contact.name}</p>\r\n                <p>Number: {contact.number}</p>\r\n                <p>Email: {contact.email}</p>\r\n              </Typography>\r\n              <div align='center'>\r\n                {/* {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button>} */}\r\n                <Button variant='text' component={Link} to='/'>\r\n                  BACK\r\n                </Button>\r\n                <Button variant='text' component={Link} to={{ pathname: `/contact/update/${contact.id}`, state: { id: id } }}>\r\n                  EDIT\r\n                </Button>\r\n                <Button variant='text' onClick={onDelete}>\r\n                  DELETE\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactItem\r\n","import React, { useCallback } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport { styled } from '@mui/material/styles'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Card, CardHeader, CardContent, Button, Typography } from '@mui/material'\r\nimport ContactItem from './ContactItem'\r\nimport './ContactTable.css'\r\n\r\n// const StyledDataGrid = styled(DataGrid)(({ theme }) => ({\r\n//   border: 0,\r\n//   color: theme.palette.mode === 'light' ? 'rgba(0,0,0,.85)' : 'rgba(255,255,255,0.85)',\r\n//   fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\r\n//   WebkitFontSmoothing: 'auto',\r\n//   letterSpacing: 'normal',\r\n//   '& .MuiDataGrid-columnsContainer': {\r\n//     backgroundColor: theme.palette.mode === 'light' ? '#fafafa' : '#1d1d1d',\r\n//   },\r\n//   '& .MuiDataGrid-iconSeparator': {\r\n//     display: 'none',\r\n//   },\r\n//   '& .MuiDataGrid-columnHeader, .MuiDataGrid-cell': {\r\n//     borderRight: `1px solid ${theme.palette.mode === 'light' ? '#f0f0f0' : '#303030'}`,\r\n//   },\r\n//   '& .MuiDataGrid-columnsContainer, .MuiDataGrid-cell': {\r\n//     borderBottom: `1px solid ${theme.palette.mode === 'light' ? '#f0f0f0' : '#303030'}`,\r\n//   },\r\n//   '& .MuiDataGrid-cell': {\r\n//     color: theme.palette.mode === 'light' ? 'rgba(0,0,0,.85)' : 'rgba(255,255,255,0.65)',\r\n//   },\r\n//   '& .MuiPaginationItem-root': {\r\n//     borderRadius: 0,\r\n//   },\r\n// }))\r\n\r\nconst ContactTable = (props) => {\r\n  const history = useHistory()\r\n  const handleOnRowClick = (props) => history.push(`/contact/find/${props.id}`)\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='place-list center'>\r\n        <Card>\r\n          <h2>No contacts found.</h2>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const rows = props.items.map((contact) => {\r\n    return { id: contact.id, name: contact.name, number: contact.number, email: contact.email }\r\n  })\r\n  const columns = [\r\n    { field: 'name', headerName: 'Name', minWidth: 150, flex: 1 },\r\n    { field: 'number', headerName: 'Number', minWidth: 150, flex: 1 },\r\n    { field: 'email', headerName: 'Email', minWidth: 150, flex: 2 },\r\n  ]\r\n\r\n  return (\r\n    <div className='contact-table'>\r\n      <DataGrid rows={rows} columns={columns} onRowClick={handleOnRowClick} AutoGenerateColumns='False' />\r\n    </div>\r\n  )\r\n\r\n  //   return (\r\n  //     <ul className='place-list'>\r\n  //       {props.items.map((contact) => (\r\n  //         <ContactItem key={contact.id} name={contact.name} number={contact.number} email={contact.email} />\r\n  //       ))}\r\n  //     </ul>\r\n  //   )\r\n}\r\n\r\nexport default ContactTable\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { Card, Container, Typography, Box } from '@mui/material'\r\n\r\nconst ErrorCard = (props) => {\r\n  const { message } = props\r\n\r\n  return (\r\n    <Container sx={{ width: '80%', marginTop: '20px' }}>\r\n      <Card sx={{ minWidth: '40%', padding: '5%' }}>\r\n        <Typography gutterBottom variant='h4' component='div' textAlign='center'>\r\n          {message}\r\n        </Typography>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ErrorCard\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container } from '@mui/material'\r\n\r\nimport ContactTable from '../components/ContactTable'\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport ErrorCard from '../../shared/components/UIElements/ErrorCard'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\nconst PopulatedContacts = (props) => {\r\n  const { query } = props\r\n\r\n  const [loadedContacts, setloadedContacts] = useState()\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n  const auth = useContext(AuthContext)\r\n\r\n  const id = useParams().userId\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      if (!query || query.length === 0) {\r\n        try {\r\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL, 'GET', null, {\r\n            Authorization: 'Bearer ' + auth.token,\r\n          })\r\n          console.log(responseData)\r\n          setloadedContacts(responseData.contacts)\r\n        } catch (err) {}\r\n      } else {\r\n        try {\r\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/contact/?search=${query}`, 'GET', null, {\r\n            Authorization: 'Bearer ' + auth.token,\r\n          })\r\n          console.log(responseData)\r\n          setloadedContacts(responseData.contacts)\r\n        } catch (err) {}\r\n      }\r\n    }\r\n    fetchContacts()\r\n  }, [sendRequest, id, query])\r\n\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Container align='center'>\r\n          <LoadingSpinner />\r\n        </Container>\r\n      )}\r\n      {!isLoading && !loadedContacts && <ErrorCard message='No results for this query!' />}\r\n      {!isLoading && loadedContacts && <ContactTable items={loadedContacts} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PopulatedContacts\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, useRouteMatch } from 'react-router-dom'\r\nimport { Box, Typography, Grid } from '@mui/material'\r\n\r\nimport BasicModal from '../../shared/components/UIElements/BasicModal'\r\nimport PopulatedContacts from './PopulatedContacts'\r\n\r\nconst ContactsPage = (props) => {\r\n  const query = useRouteMatch().params.query\r\n  const { header } = props\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} direction='column' alignItems='center' justifyContent='center'>\r\n        <Box sx={{ width: '75%' }}>\r\n          <Typography variant='h6'>{header}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <PopulatedContacts query={query} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactsPage\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useHistory, useLocation, Link } from 'react-router-dom'\r\n\r\nimport { Card, Button, Typography, TextField, Grid } from '@mui/material'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\nconst ContactForm = () => {\r\n  const [contact, setContact] = useState()\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n  const auth = useContext(AuthContext)\r\n\r\n  let id\r\n  let location = useLocation()\r\n  if (location.state) {\r\n    id = location.state.id\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, touchedFields },\r\n    setValue,\r\n  } = useForm()\r\n\r\n  const onSubmit = async (data) => {\r\n    if (id) {\r\n      return updateContact(data)\r\n    }\r\n    addNewContact(data)\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const fetchContact = async () => {\r\n      if (id) {\r\n        try {\r\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/contact/${id}`, 'GET', null, {\r\n            Authorization: 'Bearer ' + auth.token,\r\n          })\r\n          setContact(responseData.contact)\r\n          setValue('name', responseData.contact.name)\r\n          setValue('number', responseData.contact.number)\r\n          setValue('email', responseData.contact.email)\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      }\r\n    }\r\n    fetchContact()\r\n  }, [])\r\n\r\n  const addNewContact = async (data) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/contact/create',\r\n        'POST',\r\n        JSON.stringify({\r\n          name: data.name,\r\n          number: data.number,\r\n          email: data.email,\r\n          creator: '62ba24df090857c77941d687',\r\n        }),\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json',\r\n        }\r\n      )\r\n      history.push('/')\r\n    } catch (err) {\r\n      console.log(err)\r\n      alert('An error occured, please try again')\r\n    }\r\n  }\r\n\r\n  const updateContact = async (data) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/contact/${id}/update`,\r\n        'PUT',\r\n        JSON.stringify({\r\n          name: data.name,\r\n          number: data.number,\r\n          email: data.email,\r\n          creator: '62ba24df090857c77941d687',\r\n        }),\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n          'Content-Type': 'application/json',\r\n        }\r\n      )\r\n      history.push('/')\r\n    } catch (err) {\r\n      alert('An error occured, please try again')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item container spacing={4} direction='column' align='center' justifyContent='center' maxWidth='50%' margin='auto'>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      {((!isLoading && contact) || !id) && (\r\n        <Card sx={{ borderRadius: '10px' }}>\r\n          <Grid item mt={2} mb={2}>\r\n            <Typography variant='h5' component='div'>\r\n              {id ? 'Edit Contact' : 'New Contact'}\r\n            </Typography>\r\n          </Grid>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item mb={2} xs={9} flexGrow={2} align='center'>\r\n              <TextField fullWidth label='Name' {...register('name', { required: 'Required' })} error={!!errors?.name} helperText={errors?.name ? errors.name.message : null} />\r\n            </Grid>\r\n            <Grid item mb={2} xs={9} align='center'>\r\n              <TextField fullWidth label='Number' {...register('number')} />\r\n            </Grid>\r\n            <Grid item mb={2} xs={9} align='center'>\r\n              <TextField\r\n                fullWidth\r\n                label='Email'\r\n                {...register('email', {\r\n                  pattern: {\r\n                    value: /^\\S+@\\S+\\.\\S+$/,\r\n                    message: 'Invalid email address',\r\n                  },\r\n                })}\r\n                error={!!errors?.email}\r\n                helperText={errors?.email ? errors.email.message : null}\r\n              />\r\n            </Grid>\r\n            <Grid item mb={2} align='center'>\r\n              <Button type='submit' variant='text' color='primary' sx={{ marginRight: '5px' }}>\r\n                {id ? 'Update Contact' : 'Add Contact'}\r\n              </Button>\r\n              <Button variant='text' color='error' component={Link} to='/'>\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React, { useContext, useState } from 'react'\r\nimport { useHistory, useLocation, Link } from 'react-router-dom'\r\n\r\nimport { Card, Button, Typography, TextField, Grid } from '@mui/material'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext)\r\n  const [isLoginMode, setIsLoginMode] = useState(true)\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n  const onChangeAuth = () => {\r\n    setIsLoginMode(!isLoginMode)\r\n  }\r\n\r\n  const history = useHistory()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, touchedFields },\r\n    setValue,\r\n  } = useForm()\r\n\r\n  const onSubmit = async (data) => {\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: data.email,\r\n            password: data.password,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        )\r\n        auth.login(responseData.userId, responseData.token)\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n          'POST',\r\n          JSON.stringify({\r\n            name: data.name,\r\n            email: data.email,\r\n            password: data.password,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        )\r\n\r\n        auth.login(responseData.userId, responseData.token)\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item container spacing={4} direction='column' align='center' justifyContent='center' maxWidth='50%' margin='auto'>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <Card sx={{ borderRadius: '10px' }}>\r\n        <Grid item mt={2} mb={2}>\r\n          <Typography variant='h5' component='div'>\r\n            {isLoginMode ? 'Login' : 'Sign Up'}\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          {!isLoginMode && (\r\n            <Grid item mb={2} xs={9} flexGrow={2} align='center'>\r\n              <TextField fullWidth label='Name' {...register('name', { required: 'Required' })} error={!!errors?.name} helperText={errors?.name ? errors.name.message : null} />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item mb={2} xs={9} align='center'>\r\n            <TextField\r\n              fullWidth\r\n              label='Email'\r\n              {...register('email', {\r\n                pattern: {\r\n                  value: /^\\S+@\\S+\\.\\S+$/,\r\n                  message: 'Invalid email address',\r\n                },\r\n              })}\r\n              error={!!errors?.email}\r\n              helperText={errors?.email ? errors.email.message : null}\r\n            />\r\n          </Grid>\r\n          <Grid item mb={2} xs={9} align='center'>\r\n            <TextField fullWidth type='password' label='Password' {...register('password')} />\r\n          </Grid>\r\n          <Grid item mb={2} align='center'>\r\n            <Button type='submit' variant='contained' color='primary' sx={{ marginRight: '5px' }}>\r\n              {isLoginMode ? 'Login' : 'Sign Up'}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item mb={2} align='center'>\r\n            <Button variant='text' onClick={onChangeAuth}>\r\n              {isLoginMode ? 'Sign up instead' : 'Login instead'}\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { styled, alpha } from '@mui/material/styles'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport InputBase from '@mui/material/InputBase'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport AdbIcon from '@mui/icons-material/Adb'\r\n\r\nimport { Button, Menu, MenuItem, Container, Tooltip, Avatar } from '@mui/material'\r\n\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\nconst pages = ['All Contacts', 'New Contact']\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout']\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}))\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}))\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function NavBar() {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null)\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null)\r\n  const [input, setInput] = useState()\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget)\r\n  }\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null)\r\n  }\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null)\r\n  }\r\n\r\n  const handleAllContacts = (e) => {\r\n    history.push('/')\r\n    handleCloseNavMenu()\r\n  }\r\n\r\n  const handleNewContact = (e) => {\r\n    history.push('/contact/create')\r\n    handleCloseNavMenu()\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    // alert(input)\r\n    if (!input || input.length === 0) {\r\n      return history.push('/')\r\n    }\r\n    history.push(`/contact/search/${input}`)\r\n  }\r\n\r\n  const handleLogout = (e) => {\r\n    auth.logout()\r\n    handleCloseUserMenu()\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, marginBottom: '2rem' }}>\r\n      <AppBar position='static' sx={{ backgroundColor: '#a3a3a3', boxShadow: 'none' }}>\r\n        <Container width='100%'>\r\n          <Toolbar disableGutters>\r\n            <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n            <Typography\r\n              variant='h6'\r\n              noWrap\r\n              component={Link}\r\n              to='/'\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: 'none', md: 'flex' },\r\n                fontFamily: 'monospace',\r\n                fontWeight: 700,\r\n                letterSpacing: '.3rem',\r\n                color: 'inherit',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              NXTContacts\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton size='large' aria-label='account of current user' aria-controls='menu-appbar' aria-haspopup='true' onClick={handleOpenNavMenu} color='inherit'>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id='menu-appbar'\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n              >\r\n                <MenuItem key='All Contacts' onClick={handleAllContacts}>\r\n                  <Typography textAlign='center'>All Contacts</Typography>\r\n                </MenuItem>\r\n                <MenuItem key='New Contact' onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign='center'>New Contact</Typography>\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n            <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n            <Typography\r\n              variant='h5'\r\n              noWrap\r\n              component='a'\r\n              href=''\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: 'flex', md: 'none' },\r\n                flexGrow: 1,\r\n                fontFamily: 'monospace',\r\n                fontWeight: 700,\r\n                letterSpacing: '.3rem',\r\n                color: 'inherit',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              NXTContacts\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n              <Button key={'All Contacts'} onClick={handleAllContacts} sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                All Contacts\r\n              </Button>\r\n              <Button key={'New Contact'} onClick={handleNewContact} sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                New Contact\r\n              </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ flexGrow: 1, padding: '0 1em' }}>\r\n              <Search>\r\n                <SearchIconWrapper>\r\n                  <SearchIcon />\r\n                </SearchIconWrapper>\r\n                <form onSubmit={onSubmit}>\r\n                  <StyledInputBase placeholder='Search…' inputProps={{ 'aria-label': 'search' }} onChange={onChange} />\r\n                </form>\r\n              </Search>\r\n            </Box>\r\n\r\n            <Box sx={{ flexGrow: 0 }}>\r\n              <Tooltip title='Open settings'>\r\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                  <Avatar alt='ZY' src='/static/images/avatar/2.jpg' />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id='menu-appbar'\r\n                anchorEl={anchorElUser}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={handleCloseUserMenu}\r\n              >\r\n                <MenuItem key='Logout' onClick={handleLogout}>\r\n                  <Typography textAlign='center'>Logout</Typography>\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </Box>\r\n  )\r\n}\r\n\r\n{\r\n  /* <Toolbar>\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton size='large' aria-label='account of current user' aria-controls='menu-appbar' aria-haspopup='true' onClick={handleOpenNavMenu} color='inherit'>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id='menu-appbar'\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign='center'>{page}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n            {/* <IconButton size='large' edge='start' color='inherit' aria-label='open drawer' sx={{ mr: 2 }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' noWrap component='div' sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>\r\n            NextGenContacts\r\n          </Typography>\r\n\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <form onSubmit={onSubmit}>\r\n              <StyledInputBase placeholder='Search…' inputProps={{ 'aria-label': 'search' }} onChange={onChange} />\r\n            </form>\r\n          </Search> */\r\n}\r\n//</Toolbar> */}\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport ContactItem from './contacts/components/ContactItem'\r\nimport ContactsPage from './contacts/pages/ContactsPage'\r\nimport ContactForm from './contacts/components/ContactForm'\r\nimport Auth from './users/pages/Auth'\r\nimport NavBar from './shared/components/NavBar'\r\nimport { AuthContext } from './shared/context/auth-context'\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(false)\r\n  const [userId, setUserId] = useState(false)\r\n\r\n  const [loggingin, setLoggingin] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'))\r\n    if (storedData && storedData.token) {\r\n      login(storedData.userId, storedData.token)\r\n      setLoggingin(false)\r\n    }\r\n  }, [])\r\n\r\n  const login = useCallback((uid, token) => {\r\n    setToken(token)\r\n    localStorage.setItem('userData', JSON.stringify({ userId: uid, token: token }))\r\n    console.log('set')\r\n    setUserId(uid)\r\n    setLoggingin(false)\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem('userData')\r\n  }, [])\r\n\r\n  let routes\r\n\r\n  if (token) {\r\n    routes = loggingin ? (\r\n      <LoadingSpinner asOverlay />\r\n    ) : (\r\n      <Router>\r\n        <NavBar path='/' />\r\n        <Route exact path='/'>\r\n          <ContactsPage header='All Contacts' />\r\n        </Route>\r\n        <Route exact path='/contact/search/:query'>\r\n          <ContactsPage header='Search Results' />\r\n        </Route>\r\n        <Route exact path='/contact/find/:id'>\r\n          <ContactItem />\r\n        </Route>\r\n        <Route exact path='/contact/update/:id'>\r\n          <ContactForm />\r\n        </Route>\r\n        <Route exact path='/contact/create'>\r\n          <ContactForm />\r\n        </Route>\r\n      </Router>\r\n    )\r\n  } else {\r\n    routes = (\r\n      <Router>\r\n        <Route path='/'>\r\n          <Auth />\r\n        </Route>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <div className='main-window'>{routes}</div>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}